//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace DirkSarodnick.TS3_Bot.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BotDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BotDatabaseEntities object using the connection string found in the 'BotDatabaseEntities' section of the application configuration file.
        /// </summary>
        public BotDatabaseEntities() : base("name=BotDatabaseEntities", "BotDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BotDatabaseEntities object.
        /// </summary>
        public BotDatabaseEntities(string connectionString) : base(connectionString, "BotDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BotDatabaseEntities object.
        /// </summary>
        public BotDatabaseEntities(EntityConnection connection) : base(connection, "BotDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Away> Away
        {
            get
            {
                if ((_Away == null))
                {
                    _Away = base.CreateObjectSet<Away>("Away");
                }
                return _Away;
            }
        }
        private ObjectSet<Away> _Away;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Moderate> Moderate
        {
            get
            {
                if ((_Moderate == null))
                {
                    _Moderate = base.CreateObjectSet<Moderate>("Moderate");
                }
                return _Moderate;
            }
        }
        private ObjectSet<Moderate> _Moderate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreviousServerGroup> PreviousServerGroup
        {
            get
            {
                if ((_PreviousServerGroup == null))
                {
                    _PreviousServerGroup = base.CreateObjectSet<PreviousServerGroup>("PreviousServerGroup");
                }
                return _PreviousServerGroup;
            }
        }
        private ObjectSet<PreviousServerGroup> _PreviousServerGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Seen> Seen
        {
            get
            {
                if ((_Seen == null))
                {
                    _Seen = base.CreateObjectSet<Seen>("Seen");
                }
                return _Seen;
            }
        }
        private ObjectSet<Seen> _Seen;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sticky> Sticky
        {
            get
            {
                if ((_Sticky == null))
                {
                    _Sticky = base.CreateObjectSet<Sticky>("Sticky");
                }
                return _Sticky;
            }
        }
        private ObjectSet<Sticky> _Sticky;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Time> Time
        {
            get
            {
                if ((_Time == null))
                {
                    _Time = base.CreateObjectSet<Time>("Time");
                }
                return _Time;
            }
        }
        private ObjectSet<Time> _Time;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vote> Vote
        {
            get
            {
                if ((_Vote == null))
                {
                    _Vote = base.CreateObjectSet<Vote>("Vote");
                }
                return _Vote;
            }
        }
        private ObjectSet<Vote> _Vote;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Away EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAway(Away away)
        {
            base.AddObject("Away", away);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Moderate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModerate(Moderate moderate)
        {
            base.AddObject("Moderate", moderate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreviousServerGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreviousServerGroup(PreviousServerGroup previousServerGroup)
        {
            base.AddObject("PreviousServerGroup", previousServerGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeen(Seen seen)
        {
            base.AddObject("Seen", seen);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sticky EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSticky(Sticky sticky)
        {
            base.AddObject("Sticky", sticky);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Time EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTime(Time time)
        {
            base.AddObject("Time", time);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVote(Vote vote)
        {
            base.AddObject("Vote", vote);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Away")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Away : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Away object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="lastChannelId">Initial value of the LastChannelId property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        public static Away CreateAway(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.Int32 lastChannelId, global::System.DateTime creation)
        {
            Away away = new Away();
            away.Id = id;
            away.ClientDatabaseId = clientDatabaseId;
            away.LastChannelId = lastChannelId;
            away.Creation = creation;
            return away;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastChannelId
        {
            get
            {
                return _LastChannelId;
            }
            set
            {
                OnLastChannelIdChanging(value);
                ReportPropertyChanging("LastChannelId");
                _LastChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChannelId");
                OnLastChannelIdChanged();
            }
        }
        private global::System.Int32 _LastChannelId;
        partial void OnLastChannelIdChanging(global::System.Int32 value);
        partial void OnLastChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Moderate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Moderate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Moderate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="moderatorDatabaseId">Initial value of the ModeratorDatabaseId property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="serverGroup">Initial value of the ServerGroup property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        public static Moderate CreateModerate(global::System.Guid id, global::System.Int32 moderatorDatabaseId, global::System.Int32 clientDatabaseId, global::System.Int32 serverGroup, global::System.Byte type, global::System.DateTime creation)
        {
            Moderate moderate = new Moderate();
            moderate.Id = id;
            moderate.ModeratorDatabaseId = moderatorDatabaseId;
            moderate.ClientDatabaseId = clientDatabaseId;
            moderate.ServerGroup = serverGroup;
            moderate.Type = type;
            moderate.Creation = creation;
            return moderate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModeratorDatabaseId
        {
            get
            {
                return _ModeratorDatabaseId;
            }
            set
            {
                OnModeratorDatabaseIdChanging(value);
                ReportPropertyChanging("ModeratorDatabaseId");
                _ModeratorDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModeratorDatabaseId");
                OnModeratorDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ModeratorDatabaseId;
        partial void OnModeratorDatabaseIdChanging(global::System.Int32 value);
        partial void OnModeratorDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerGroup
        {
            get
            {
                return _ServerGroup;
            }
            set
            {
                OnServerGroupChanging(value);
                ReportPropertyChanging("ServerGroup");
                _ServerGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerGroup");
                OnServerGroupChanged();
            }
        }
        private global::System.Int32 _ServerGroup;
        partial void OnServerGroupChanging(global::System.Int32 value);
        partial void OnServerGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Byte _Type;
        partial void OnTypeChanging(global::System.Byte value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="PreviousServerGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreviousServerGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreviousServerGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="serverGroup">Initial value of the ServerGroup property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        public static PreviousServerGroup CreatePreviousServerGroup(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.Int32 serverGroup, global::System.DateTime creation)
        {
            PreviousServerGroup previousServerGroup = new PreviousServerGroup();
            previousServerGroup.Id = id;
            previousServerGroup.ClientDatabaseId = clientDatabaseId;
            previousServerGroup.ServerGroup = serverGroup;
            previousServerGroup.Creation = creation;
            return previousServerGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerGroup
        {
            get
            {
                return _ServerGroup;
            }
            set
            {
                OnServerGroupChanging(value);
                ReportPropertyChanging("ServerGroup");
                _ServerGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerGroup");
                OnServerGroupChanged();
            }
        }
        private global::System.Int32 _ServerGroup;
        partial void OnServerGroupChanging(global::System.Int32 value);
        partial void OnServerGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Seen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Seen : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Seen object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="lastSeen">Initial value of the LastSeen property.</param>
        public static Seen CreateSeen(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.DateTime lastSeen)
        {
            Seen seen = new Seen();
            seen.Id = id;
            seen.ClientDatabaseId = clientDatabaseId;
            seen.LastSeen = lastSeen;
            return seen;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastSeen
        {
            get
            {
                return _LastSeen;
            }
            set
            {
                OnLastSeenChanging(value);
                ReportPropertyChanging("LastSeen");
                _LastSeen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSeen");
                OnLastSeenChanged();
            }
        }
        private global::System.DateTime _LastSeen;
        partial void OnLastSeenChanging(global::System.DateTime value);
        partial void OnLastSeenChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Sticky")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sticky : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sticky object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="channelId">Initial value of the ChannelId property.</param>
        /// <param name="stickTime">Initial value of the StickTime property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        public static Sticky CreateSticky(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.Int32 channelId, global::System.Int32 stickTime, global::System.DateTime creation)
        {
            Sticky sticky = new Sticky();
            sticky.Id = id;
            sticky.ClientDatabaseId = clientDatabaseId;
            sticky.ChannelId = channelId;
            sticky.StickTime = stickTime;
            sticky.Creation = creation;
            return sticky;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private global::System.Int32 _ChannelId;
        partial void OnChannelIdChanging(global::System.Int32 value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StickTime
        {
            get
            {
                return _StickTime;
            }
            set
            {
                OnStickTimeChanging(value);
                ReportPropertyChanging("StickTime");
                _StickTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StickTime");
                OnStickTimeChanged();
            }
        }
        private global::System.Int32 _StickTime;
        partial void OnStickTimeChanging(global::System.Int32 value);
        partial void OnStickTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Time")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Time : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Time object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="joined">Initial value of the Joined property.</param>
        /// <param name="disconnected">Initial value of the Disconnected property.</param>
        /// <param name="totalMinutes">Initial value of the TotalMinutes property.</param>
        public static Time CreateTime(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.DateTime joined, global::System.DateTime disconnected, global::System.Double totalMinutes)
        {
            Time time = new Time();
            time.Id = id;
            time.ClientDatabaseId = clientDatabaseId;
            time.Joined = joined;
            time.Disconnected = disconnected;
            time.TotalMinutes = totalMinutes;
            return time;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Joined
        {
            get
            {
                return _Joined;
            }
            set
            {
                OnJoinedChanging(value);
                ReportPropertyChanging("Joined");
                _Joined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Joined");
                OnJoinedChanged();
            }
        }
        private global::System.DateTime _Joined;
        partial void OnJoinedChanging(global::System.DateTime value);
        partial void OnJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Disconnected
        {
            get
            {
                return _Disconnected;
            }
            set
            {
                OnDisconnectedChanging(value);
                ReportPropertyChanging("Disconnected");
                _Disconnected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disconnected");
                OnDisconnectedChanged();
            }
        }
        private global::System.DateTime _Disconnected;
        partial void OnDisconnectedChanging(global::System.DateTime value);
        partial void OnDisconnectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalMinutes
        {
            get
            {
                return _TotalMinutes;
            }
            set
            {
                OnTotalMinutesChanging(value);
                ReportPropertyChanging("TotalMinutes");
                _TotalMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalMinutes");
                OnTotalMinutesChanged();
            }
        }
        private global::System.Double _TotalMinutes;
        partial void OnTotalMinutesChanging(global::System.Double value);
        partial void OnTotalMinutesChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BotDatabaseModel", Name="Vote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clientDatabaseId">Initial value of the ClientDatabaseId property.</param>
        /// <param name="creation">Initial value of the Creation property.</param>
        public static Vote CreateVote(global::System.Guid id, global::System.Int32 clientDatabaseId, global::System.DateTime creation)
        {
            Vote vote = new Vote();
            vote.Id = id;
            vote.ClientDatabaseId = clientDatabaseId;
            vote.Creation = creation;
            return vote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientDatabaseId
        {
            get
            {
                return _ClientDatabaseId;
            }
            set
            {
                OnClientDatabaseIdChanging(value);
                ReportPropertyChanging("ClientDatabaseId");
                _ClientDatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientDatabaseId");
                OnClientDatabaseIdChanged();
            }
        }
        private global::System.Int32 _ClientDatabaseId;
        partial void OnClientDatabaseIdChanging(global::System.Int32 value);
        partial void OnClientDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelId
        {
            get
            {
                return _ChannelId;
            }
            set
            {
                OnChannelIdChanging(value);
                ReportPropertyChanging("ChannelId");
                _ChannelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelId");
                OnChannelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelId;
        partial void OnChannelIdChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Creation
        {
            get
            {
                return _Creation;
            }
            set
            {
                OnCreationChanging(value);
                ReportPropertyChanging("Creation");
                _Creation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creation");
                OnCreationChanged();
            }
        }
        private global::System.DateTime _Creation;
        partial void OnCreationChanging(global::System.DateTime value);
        partial void OnCreationChanged();

        #endregion
    
    }

    #endregion
    
}
